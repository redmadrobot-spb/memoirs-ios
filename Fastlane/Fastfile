min_fastlane_version("2.71.0")

default_platform(:ios)

platform :ios do
    # Load local enviroment variables
    if File.exist?('.env')
        open('.env', 'r').readlines.each do |l|
            kv = l.split('=')
            ENV[kv[0]] = kv[1].chomp
        end
    end

    # Publish test app to App Center
    lane :publish_test_app do |options|
        ensure_git_status_clean
        # ensure_git_branch(branch: 'dev')

        release_notes = prompt(
            text: "Release notes: ",
            multi_line_end_keyword: "END"
        )

        if options[:bump_version]
            bump_version
        end
        increment_build_number

        build(
            scheme: "Example",
            export_method: "ad-hoc",
            export_options: {
                provisioningProfiles: {
                    "com.redmadrobot.spb.robologs.testApplication" => "Robologs Test Application Distribution"
                }
            }
        )

        upload_to_crashlytics(release_notes: release_notes)
        commit_version_bump(
            message: "Build #{current_version}",
            xcodeproj: "Robologs.xcodeproj"
        )
        add_git_tag(tag: "v#{current_version}")
        push_to_git_remote(tags: true)
    end

    # Increment version and commit
    lane :bump_version do
        version = get_version_number(target: "Example")
        list = version.split(".")
        incremented = String(Integer(list.last) + 1)
        new_version = "#{list.first}.#{incremented}"
        increment_version_number(version_number: new_version)
        increment_build_number(build_number: "0")
    end

    private_lane :current_version do
        version_number = get_version_number(target: "Example")
        build_number = build_number = get_build_number
        "#{version_number}(#{build_number})"
    end

    private_lane :build do |options|
        scheme = options[:scheme]
        output_name = options[:output_name]
        export_method = options[:export_method]
        export_options = options[:export_options]
        clean = options[:clean]

        update_version

        build_ios_app(
            scheme: scheme,
            output_directory: "build/",
            build_path: "build/",
            derived_data_path: "build/DerivedData/",
            output_name: output_name,
            include_symbols: true,
            export_method: export_method,
            export_options: export_options,
            clean: clean.nil? ? true : clean
        )
    end

    private_lane :update_version do
        increment_version_number(version_number: ENV["VERSION_NUMBER"]) if ENV["VERSION_NUMBER"]
        increment_build_number(build_number: ENV["BUILD_NUMBER"]) if ENV["BUILD_NUMBER"]
    end

    private_lane :upload_to_app_center do |options|
        api_token = ENV["APP_CENTER_API_TOKEN"]

        appcenter_upload(
            api_token: api_token,
            owner_name: "Redmadrobot-SPb",
            app_name: options[:app_name],
            destinations: "Internal",
            destination_type: "group",
            notify_testers: true
        )
    end
end
